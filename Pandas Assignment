Q1. How do you load a CSV file into a Pandas DataFrame?
Q1 ANS -
import pandas as pd
file_name = "Link of the csv"
df = pd.read("file_name")

Q2. How do you check the data type of a column in a Pandas DataFrame?
Q2 ANS -
import pandas as pd
file_name = "Link of the csv"
df = pd.read("file_name")
df.dtypes

Q3. How do you select rows from a Pandas DataFrame based on a condition?
Q3 ANS -

import pandas as pd

data = {
    "NAME":["A","B","C","D","E","F"],
    "AGE":[21,22,23,24,25,21],
    "FIELD OF STUDY":["BBA","B.COM","BCA","B.A.","B.TECH","M.TECH"],
    "LOCATION":["AHMEDABAD","MEHSANA","GANDHINAGAR","VADODRA","SURAT","AHMEDABAD"]
}

students_data = pd.DataFrame(data)

students_data

	NAME	AGE	FIELD OF STUDY	LOCATION
0	A    	21	BBA           	AHMEDABAD
1	B   	22	B.COM	          MEHSANA
2	C   	23	BCA	            GANDHINAGAR
3	D	    24	B.A.          	VADODRA
4	E   	25	B.TECH	        SURAT
5	F   	21	M.TECH        	AHMEDABAD

# if there's a condition that the Age should be more than 23 :-
students_data2 = students_data[students_data["AGE"]>=23]
students_data2

# if there's a condition that the fileld of study is equal to "BBA" :-
students_data3 = students_data[students_data["FIELD OF STUDY"]=="BBA"]
students_data3

# if there's a condition that the age should be below than 25 :-
students_data4 = students_data.loc[students_data['AGE']<25]
students_data4

Q4. How do you rename columns in a Pandas DataFrame?
Q4 ANS -

import pandas as pd
data = {
    "NAME":["A","B","C","D","E","F"],
    "AGE":[21,22,23,24,25,21],
    "FIELD OF STUDY":["BBA","B.COM","BCA","B.A.","B.TECH","M.TECH"],
    "LOCATION":["AHMEDABAD","MEHSANA","GANDHINAGAR","VADODRA","SURAT","AHMEDABAD"]
}

students_data = pd.DataFrame(data)
students_data

 NAME	AGE	FIELD OF STUDY	LOCATION
0	A	  21	BBA           	AHMEDABAD
1	B 	22	B.COM	          MEHSANA
2	C	  23	BCA	            GANDHINAGAR
3	D	  24	B.A.           	VADODRA
4	E 	25	B.TECH        	SURAT
5	F 	21	M.TECH	        AHMEDABAD

#THIS IS HOW YOU CAN CHANGE THE COLUMNS NAME IN A DATAFRAME
students_data1 = students_data.rename(columns={"NAME":"NAMEEEE","AGE":"AGEEEE","LOCATION":"LOCATIONNNN"})
students_data1

Q5. How do you drop columns in a Pandas DataFrame?
Q5 ANS -

import pandas as pd
titanic_data = pd.read_csv("https://raw.githubusercontent.com/datasciencedojo/datasets/master/titanic.csv")
titanic_data

#DROPPING USING drop()
#this is how we can drop multiples columns
titanic_data1 = titanic_data
titanic_data1.drop(["Sex","Name"], axis = 1)

#THIS IS HOW WE CAN DROP A COLUMN
titanic_data2 = titanic_data
titanic_data2.drop(["Sex"], axis = 1)

#THIS IS HOW WE CAN DROP COLUMNS BY INDEX
titanic_data3 = titanic_data
titanic_data3.drop(titanic_data3.columns[[2,3]], axis = 1)

#using drop() function with df.iloc()
titanic_data3 = titanic_data
titanic_data3.drop(titanic_data3.iloc[:, 2:4], axis = 1)

#using drop() function with df.loc()
titanic_data4 = titanic_data
titanic_data4.drop(titanic_data3.loc[:,"PassengerId":"Fare" ], axis = 1)

#using del and for loop
titanic_data4 = titanic_data3
for col in titanic_data4.columns:
  if "Name" in col:
    del titanic_data4[col]

Q6. How do you find the unique values in a column of a Pandas DataFrame?
Q6 ANS -

import pandas as pd
titanic_data = pd.read_csv("https://raw.githubusercontent.com/datasciencedojo/datasets/master/titanic.csv")
titanic_data

#THIS IS HOW WE CAN FIND UNIQUE VALUES IN A PANDAS DATAFRAME
titanic_data["Embarked"].unique()

Q7. How do you find the number of missing values in each column of a Pandas DataFrame?
Q7 ANS -

import pandas as pd
titanic_data = pd.read_csv("https://raw.githubusercontent.com/datasciencedojo/datasets/master/titanic.csv")
titanic_data

# THIS IS HOW WE CAN CHECK THE NULL VALUES IN PYTHON
titanic_data.isnull()

# THIS IS HOW WE CAN CHECK NUMBER OF NULL VALUES IN COLUMNS
titanic_data.isnull().sum()

# THIS IS HOW WE CAN CHECK THE NUMBER OF NULL VALUES IN THE DATAFRAME

Q8. How do you fill missing values in a Pandas DataFrame with a specific value?
Q8 ANS -

import pandas as pd
titanic_data = pd.read_csv("https://raw.githubusercontent.com/datasciencedojo/datasets/master/titanic.csv")
titanic_data

#FILLING NULL VALUES WITH THE MEAN OF A COLUMN
titanic_data8 = titanic_data
titanic_data8.fillna(value=titanic_data8["Age"].mean())

#FILLING DIFFERENT VALUES IN NULL IN DIFFERENT COLUMNS
titanic_data7 = titanic_data
titanic_data7.fillna({"Fare	":"ABCD","Cabin":"XYZ"})

Q9. How do you concatenate two Pandas DataFrames?
Q9 ANS -

# THIS IS HOW YOU CAN CONCATE DATAFRAMES IN A PANDAS
concated_data = pd.concat([gujarat_whether, rajasthan_whether])
concated_data

# THIS IS HOW YOU CAN CONCATE DATAFRAMES IN A PANDAS AND IF YOU DONT WANT THE INDEXES OF OLD DATAFRAMES THEN THAT'S WHAT YOU CAN DO -
concated_data2 = pd.concat([gujarat_whether, rajasthan_whether], ignore_index=True)
concated_data2

Q10. How do you merge two Pandas DataFrames on a specific column?
Q10 ANS -

# THIS IS HOW YOU CAN MERGE 2 DATAFRAME IN ONE DATAFRAME
df3 = pd.merge(df1, df2, on="city")
df3

Q11. How do you group data in a Pandas DataFrame by a specific column and apply an aggregation function?
Q11 ANS - 

import pandas as pd
import numpy as np

#CREATING A PANDAS DATAFRAME
data = {
    "NAME":["A","B","C","D","E","F","G","H","I","J"],
    "TEAM":["Business Analytics","Business Analytics","Business Analytics","Business Analytics","Business Analytics","Business Analytics","Business Analytics","Business Analytics","Business Analytics","Business Analytics"],
    "NUMBER":[1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1,9.1,10.1],
    "POSITION":["AA","AB","AC","AD","AA","AB","AC","AD","AA","AB"],
    "AGE":[20,22,24,26,28,30,32,34,36,38],
    "HEIGHT":[6-2,6-4,6-6,6-8,7-0,6-2,6-4,6-6,6-8,7-0],
    "WEIGHT":[75.0,80.0,81.0,28.5,35.4,84.4,35.1,78.3,67.4,49.5],
    "COLLEGE":["AAAA","BBBB","CCCC","DDDD","EEEE","FFFF","GGGG","HHHH","IIII","JJJJ"],
    "SALARY":[12000,13000,11000,13000,14000,15000,16000,17000,18000,19000,]
}

data = pd.DataFrame(data)
data

# Applying aggregation across all the columns
# sum and min will be found for each
# numeric type column in df dataframe

data1.aggregate(['sum', 'min'])

# We are going to find aggregation for these columns
data1.aggregate({"NUMBER":['sum', 'min'],
			"AGE":['max', 'min'],
			"WEIGHT":['min', 'sum'],
			"SALARY":['sum']})


Q12. How do you pivot a Pandas DataFrame?
ANS - 

import pandas as pd

df = pd.DataFrame({
    'date' : ["5/1/2017","5/2/2017","5/3/2017","5/1/2017","5/2/2017","5/3/2017","5/1/2017","5/2/2017","5/3/2017"],
    'city' : ['new york','new york','new york','mumbai','mumbai','mumbai','beijing','beijing','beijing'],
    'temperature' : [65,66,68,75,78,82,80,77,79],
    'humidity' : [56,58,60,80,83,85,26,30,35]
})

df1 = df
df1

df1.pivot(index='date',columns='city')

df2 = df
df2.pivot(index='date',columns='city',values='humidity')

Q13. How do you change the data type of a column in a Pandas DataFrame?
ANS - 

import pandas as pd
dff = pd.DataFrame([
    [1,1,1],
    [2,2,2],
    [3,3,3],
    [4,4,4]],
    columns = ['col_1','col_2','col_3'])
    
print(dff)
	col_1	col_2	col_3
0	1	1	1
1	2	2	2
2	3	3	3
3	4	4	4

dff.sort_values(by = 'col_1', ascending= False)

col_1	col_2	col_3
3	4	4	4
2	3	3	3
1	2	2	2
0	1	1	1

import pandas as pd
karan = pd.DataFrame([
    [1,1,1],
    [2,2,2],
    ['3',3,3],
    [4,4,4]],
    columns = ['col_1','col_2','col_3'])

karan.info()

<class 'pandas.core.frame.DataFrame'>
RangeIndex: 4 entries, 0 to 3
Data columns (total 3 columns):
 #   Column  Non-Null Count  Dtype
---  ------  --------------  -----
 0   col_1   4 non-null      int64
 1   col_2   4 non-null      int64
 2   col_3   4 non-null      int64
dtypes: int64(3)
memory usage: 224.0 bytes

karan['col_1'] = karan['col_1'].astype('int64')

print(karan)

  col_1  col_2  col_3
0      1      1      1
1      2      2      2
2      3      3      3
3      4      4      4


Q14. How do you sort a Pandas DataFrame by a specific column?
ANS -

import pandas as pd
students_data = pd.DataFrame({
    'roll_no':[101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119],
    'name_of_students':['sundeep','saradhi','ramesh','suresh','sathwik','abhiram','shrinidhi','dinesh','harish','murali','vasi','kali','ramu','krishna','hari','pawan','ashok','govind','bhargav'],
    "telugu":[90,50,95,55,88,73,90,75,84,83,85,50,89,20,89,67,25,48,67],
    "english":[85,60,78,87,84,84,83,78,85,98,86,54,97,45,74,64,81,97,67],
    "maths":[80,75,68,68,98,91,74,85,76,81,92,64,69,70,85,60,78,87,57],
    "science":[78,56,48,75,96,48,42,65,34,95,34,81,67,34,76,15,67,98,76],
    "social":[90,50,95,55,88,85,60,78,87,84,80,75,68,68,98,78,56,48,75]
    })

# with this statement the table get's arranged according to the column name in ascending order 'name_of_students'
students_data.sort_values('name_of_students')

# with this statement the table get's arranged according to the maths column in desending to ascending order
students_data.sort_values('maths', ascending=False)

# with this statement the table get's arranged according to the maths column in ascending to desending order
students_data.sort_values('maths', ascending=True)

# with this statement the table get's arranged according to the maths, and roll_no column in desending to ascending order
students_data.sort_values(['maths','roll_no'], ascending=False)

students_data.sort_values(['maths','english'], ascending=[0,1])
#zero is for ascending and 1 is for decending
#maths column will be like big to small
#english column will be like small to big

Q15. How do you create a copy of a Pandas DataFrame?
ANS -

import pandas as pd
students_data2 = pd.DataFrame({
    'roll_no':[101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119],
    'name_of_students':['sundeep','saradhi','ramesh','suresh','sathwik','abhiram','shrinidhi','dinesh','harish','murali','vasi','kali','ramu','krishna','hari','pawan','ashok','govind','bhargav'],
    "telugu":[90,50,95,55,88,73,90,75,84,83,85,50,89,20,89,67,25,48,67],
    "english":[85,60,78,87,84,84,83,78,85,98,86,54,97,45,74,64,81,97,67],
    "maths":[80,75,68,68,98,91,74,85,76,81,92,64,69,70,85,60,78,87,57],
    "science":[78,56,48,75,96,48,42,65,34,95,34,81,67,34,76,15,67,98,76],
    "social":[90,50,95,55,88,85,60,78,87,84,80,75,68,68,98,78,56,48,75]
    })

# this method will create a refrence of the existing dataframe 
students_data_refrence = students_data
students_data_refrence

#this method will create a copy of the dataframe
students_data_copy = students_data.copy()
students_data_copy

Q16. How do you filter rows of a Pandas DataFrame by multiple conditions?
ANS -

import pandas as pd

people_info = {
    'first_name':['karan','arjun','vikas','vishal','rohit'],
    'last_name':['rajpurohit','kushwah','azad','rajpur','sharma'],
    'E-mail':['karan626@gmail.com','arjun9dh7@gmail.com','vikkkas7hd7e@gmail.com','vishaaal7ehh7t@gmail.com','rohittth 847477@gmail.com',]
}

people_details = pd.DataFrame(people_info)

print(people_details)

	first_name	last_name	E-mail
0	karan	rajpurohit	karan626@gmail.com
1	arjun	kushwah	arjun9dh7@gmail.com
2	vikas	azad	vikkkas7hd7e@gmail.com
3	vishal	rajpur	vishaaal7ehh7t@gmail.com
4	rohit	sharma	rohittth 847477@gmail.com

want_last_and_first_name = (people_details['last_name'] == 'rajpurohit') & (people_details['first_name'] == 'karan')

people_details[want_last_and_first_name]

first_name	last_name	E-mail
0	karan	rajpurohit	karan626@gmail.com

people_details.loc[want_last_and_first_name, 'E-mail']

0    karan626@gmail.com
Name: E-mail, dtype: object

Q17. How do you calculate the mean of a column in a Pandas DataFrame?
ANS -

#pandas mean 
import pandas as pd
data = pd.DataFrame({
    'name':['karan','vikas','pankaj','aditya','samrat'],
    'col_1':[10,20,30,40,50],
    'col_2':[60,70,80,90,100]
})

details = data

details

name	col_1	col_2
0	karan	10	60
1	vikas	20	70
2	pankaj	30	80
3	aditya	40	90
4	samrat	50	100

#to find mean all of the columns
print(details.mean())

col_1    30.0
col_2    80.0
dtype: float64

#to find mean of a specific column
details['col_1'].mean()

30.0

#to find mean of a specific column
details['col_2'].mean()

80.0

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

data2 = pd.DataFrame({
    'x1':[6,2,7,5,3,7,2,7,9],
    'x2':range(0,9),
    'group':['A','B','B','A','A','C','C','B','A']
})

details2 = data2
details2

	x1	x2	group
0	6	0	A
1	2	1	B
2	7	2	B
3	5	3	A
4	3	4	A
5	7	5	C
6	2	6	C
7	7	7	B
8	9	8	A

details2.mean()

x1    5.333333
x2    4.000000
dtype: float64


Q18. How do you calculate the standard deviation of a column in a Pandas DataFrame?
ANS -

import pandas as pd

#create DataFrame

df = pd.DataFrame({
    'team':['x','x','y','y','y','y','z','z'],
    'points':[22,10,11,16,12,45,36,40],
    'assists':[8,9,13,7,22,24,4,6],
    'rebounds':[17,14,3,5,9,8,7,4]
})

print(df)

	team	points	assists	rebounds
0	x	22	8	17
1	x	10	9	14
2	y	11	13	3
3	y	16	7	5
4	y	12	22	9
5	y	45	24	8
6	z	36	4	7
7	z	40	6	4

#this is how to calculate standerd deviation of a column.
print(df['points'].std())

14.23275899365364

#this is how to calculate standerd deviation of a columns.
print(df[['points','rebounds']].std())

points      14.232759
rebounds     4.897157
dtype: float64

#this is how to calculate standerd deviation of a table.
print(df.std())

points      14.232759
assists      7.501190
rebounds     4.897157
dtype: float64


Q19. How do you calculate the correlation between two columns in a Pandas DataFrame?

Q20. How do you select specific columns in a DataFrame using their labels?

Q21. How do you select specific rows in a DataFrame using their indexes?

Q22. How do you sort a DataFrame by a specific column?

Q23. How do you create a new column in a DataFrame based on the values of another column?

Q24. How do you remove duplicates from a DataFrame?

Q25. What is the difference between .loc and .iloc in Pandas?
